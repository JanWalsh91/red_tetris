Component Structure:

<Provider>
	<App>
		<Header>
		<Main smart>
			<Board type=[main / shadow], colors=[][]>
				<div>s
			<HostList list>
				<Host>
				<New Game>
			<Error msg>

			<ShadowBoards>
				<Board>
		<GameInfo>


Actions:

NEW_GAME
START_GAME
END_GAME
MOVE_PIECE (sends update to server)
{
 type: MOVE_PIECE,
 moveType: [right, left, down, down2, rotate]
}
NEW_PIECE
NEXT_PIECE

UPDATE_BOARDS (after new boards received from server, update boards) (connection info)

NEW_ROOM
CONNECT_TO_ROOM
DISCONNECT


TODO:

server return Structure:
{
	playerBoard,
	[
		{
			playerName,
			playerBoard
		}
	]
}



Structures:

Server {

}

Game
{
	Players[]
	isPlaying
	numPlayers
	allPieces[]

	generatePieces()
}

Player
{
	uuid
	name
	isHost
	Board
}

Board
{
	size (10 cols 20 rows)
	pieces[]
	currentPiece
	newPieces[]
	isPlaying
	winStatus
}

Piece
{
	type
	{
		int
		color
	}
	coords
	rotation
	isMoving
}
